version: '3.6'

services:

  # Elasticsearch. See README for necessary host settings.
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data_vol:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Postgres/PostGIS
  db:
    image: postgres:${POSTGRES_VERSION}
    restart: always
    env_file:
      - config/db/db_env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data_vol:/var/lib/postgresql/data

  # Memcached for Django
  memcached:
      image: memcached:${MEMCACHED_VERSION}

  # Radiam API
  radiamapi:
    build: .
    command: ["/wait-for-it/wait-for-it.sh", "db:5432", "-s", "--timeout=60", "--", "gunicorn", "--bind", ":8000", "--reload", "radiam.wsgi:application"]
    environment:
      - SESSIONAUTH=1
    volumes:
      - .:/code
      - static_volume:/django/static
    healthcheck:
      test: "curl -X OPTIONS http://localhost:8000 -H 'Origin: http://localhost:8000' -H 'Access-Control-Request-Headers: Origin, Accept, Content-Type' -H 'Access-Control-Request-Method: GET' || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - elasticsearch
      - migration
      - memcached
      - db

  # Run database migrations for Django on startup.
  migration:
    build: .
    command: ["/wait-for-it/wait-for-it.sh", "db:5432", "-s", "--timeout=60", "--", "python", "/code/manage.py", "migrate", "--noinput"]
    volumes:
      - .:/code
    restart: on-failure
    depends_on:
      - db

  # Run Radiam Initialization after the application is built
  init:
    build: .
    command: ["/wait-for-it/wait-for-it.sh", "elasticsearch:9200", "-s", "--timeout=60", "--", "python", "/code/manage.py", "radiam"]
    volumes:
      - .:/code
    depends_on:
      - elasticsearch

  # Radiam GUI
  radiamgui:
    image: ${REGISTRY_HOST}/radiam-gui # Pull the prebuilt GUI image from the registry

  # Web server for both the GUI and API
  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - "8100:80"
    volumes:
      - ./config/nginx/conf.d/local/:/etc/nginx/conf.d
      - ./uploads/:/django/uploads
      - static_volume:/django/static
    depends_on:
      - radiamapi
      - radiamgui

volumes:
      elasticsearch_data_vol:
      postgres_data_vol:
      static_volume:
